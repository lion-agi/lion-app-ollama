from pydantic import BaseModel, Field
from ..data_models import OllamaEndpointResponseBody
from .message_models import Message


class Function(BaseModel):
    name: str = Field(description="The name of the function to call.")
    arguments: str = Field(description="The arguments to pass to the function.")


class ToolCall(BaseModel):
    function: Function = Field(description="The function call details.")


class OllamaStreamChatCompletionResponseBody(OllamaEndpointResponseBody):
    model: str = Field(description="The model name")

    created_at: str = Field(description="The timestamp when the response was created")

    message: Message = Field(description="he partial or full response generated by the model")

    done: bool = Field(description="A flag indicating whether the response generation is complete")


class OllamaChatCompletionResponseBody(OllamaStreamChatCompletionResponseBody):
    total_duration: int = Field(description="Time spent generating the response")

    load_duration: int = Field(description="Time spent in nanoseconds loading the model")

    prompt_eval_count: int = Field(description="number of tokens in the prompt")

    prompt_eval_duration: int = Field(description="time spent in nanoseconds evaluating the prompt")

    eval_count: int = Field(description="number of tokens in the response")

    eval_duration: int = Field(description="time in nanoseconds spent generating the response")
